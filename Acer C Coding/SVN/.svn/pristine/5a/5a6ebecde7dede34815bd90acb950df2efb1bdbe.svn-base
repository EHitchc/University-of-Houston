1. Is the waterfall model a good choice for developing this system? Only Yes or No
	No.
2. Give four reasons to support your answer in 1.
	The waterfall model would be a poor choice for development of this system due to the difficulty in adjusting the program once it is in the testing phase and the lack of working software until the late development stages. The client would likely want to phase this system in as it is developed so that they can see what specific functions they need the portal to fulfil. This would not be possible with a waterfall model as there are no incremental releases between development and testing stages. For a waterfall model, it would be required that all specifications for functions be laid out during planning. This does not suit a project in which privileges are based on the roles of the user, thus preventing the development from moving from the design specifications if the functions no longer meet the client’s needs. With the waterfall approach, there is the risk that the client may switch their admin application but the specifications for the admin portal would not change so the two programs may be incompatible upon release of the portal.
3. Is iterative development leading to a single release of the system a good choice for developing this system? Only Yes or No
	Yes.
4. Give four reasons to support your answer in 3.
	- iterative development (mini-waterfall) allows for development of a base system before features added
	- allows for testing of each feature individually
(A negative but wanted to add here in case helps with understanding: Each iteration is set up like a waterfall, i.e. Planning first…testing last therefore no ability to evolve within an iteration. Each iteration can last months which means no input from company therefore a risk of being out of touch.)
5. Is agile development with releases of small increments of software a good choice for developing this system? Only Yes or No
	Yes.
6. Give four reasons to support your answer in 5.
	An agile solution would be beneficial to the development of the admin portal as the detail b) ambiguously states “what links you can access… is determined based on what roles you have” without explicitly defining these roles. It is likely that new roles will form, or old roles will evolve during the development of the admin portal, so it would be effective to have the company involved during the design process to best adjust the specifications accordingly. Additionally, as the application is only to be accessed on the company network, an agile solution would allow for the client to test each iteration of the software and ensure there are no conflicts with their current systems. As the admin application is not developed by us, it would be beneficial to have the agile model instead to test whether their system functions alongside our portal. Alongside the client being constantly involved in the development process, agile requires iterations be rapidly developed and deployed to the client which allows for user feedback and reduces the risk that the program does not meet the client’s needs.
7. What are your first thoughts on how you will approach the solution?
